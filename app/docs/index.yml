openapi: 3.0.0
info:
  title: hapi + PostgreSQL demo
  version: 1.0.0
components:
  parameters:
    organizationId:
      $ref: ./parameters/organizationId.yml
    productId:
      $ref: ./parameters/productId.yml
    userId:
      $ref: ./parameters/userId.yml
  responses:
    badRequest:
      $ref: ./responses/badRequest.yml
    itemDeleted:
      $ref: ./responses/itemDeleted.yml
    notFound:
      $ref: ./responses/notFound.yml
    unauthorized:
      $ref: ./responses/unauthorized.yml
  schemas:
    organization:
      $ref: ./schemas/organization.yml
    product:
      $ref: ./schemas/product.yml
    user:
      $ref: ./schemas/user.yml
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /organizations:
    get:
      description: Get all organizations for a user
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
  /organizations/{organizationId}:
    get:
      description: Retrieve information about an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    patch:
      description: Update information about an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
  /organizations/{organizationId}/products:
    get:
      description: Retrieve products for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      description: Create a product for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'          
  /organizations/{organizationId}/products/{productId}:
    get:
      description: Retrieve a product by ID for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/productId'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    patch:
      description: Update a product for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/productId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    delete:
      description: Delete a product from an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/productId'
      responses:
        '200':
          $ref: '#/components/responses/itemDeleted'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
  /organizations/{organizationId}/users:
    get:
      description: Retrieve users for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      description: Create a user for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'          
  /organizations/{organizationId}/users/{userId}:
    get:
      description: Retrieve a user by ID for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    patch:
      description: Update a user for an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/userId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
    delete:
      description: Delete a user from an organization
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          $ref: '#/components/responses/itemDeleted'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'